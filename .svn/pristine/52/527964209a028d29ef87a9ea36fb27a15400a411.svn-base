var playerCamera = {}, vlCamera = {}, camera;
var lookat;



var VIEW_ANGLE = 75,
    ASPECT = WIDTH / HEIGHT,
    NEAR = 0.1,
    FAR = 10000;

function create_camera(){


    playerCamera = new THREE.PerspectiveCamera(VIEW_ANGLE, ASPECT, NEAR, FAR);
    playerCamera.initialpos = new THREE.Vector3( 0, 160, 165 );
    playerCamera.position.set(playerCamera.initialpos.x, playerCamera.initialpos.y, playerCamera.initialpos.z);
    playerCamera.lookAt(scene);
    scene.add(playerCamera);

    vlCamera = new THREE.PerspectiveCamera(VIEW_ANGLE, ASPECT, NEAR, FAR);
    vlCamera.initialpos = new THREE.Vector3( 0, 210, -170 );
    vlCamera.position.set(vlCamera.initialpos.x, vlCamera.initialpos.y, vlCamera.initialpos.z);
    vlCamera.lookAt(scene);
    scene.add(vlCamera);

//    var lookat = new THREE.Vector3(0,50,-100);

    lookat = new THREE.Vector3(0,50,-100);

    camera = playerCamera;


//    camera.initialpos = playerCamPos;

//    camera.focalLength = 25;
//    camera.frameSize = 32;
//    camera.setLens(camera.focalLength, camera.frameSize);

    mouse = {x : 0, y : 0};

    document.addEventListener('mousemove', function(event){
        mouse.x	= (event.clientX / window.innerWidth ) - 0.5;
        mouse.y	= (event.clientY / window.innerHeight) - 0.5;

//        if(Player.drunked < 11){
////            camera.position.x += (mouse.x * 20 - camera.position.x) * (0.5*3) + camera.initialpos.x;
////            camera.position.y += (mouse.y * 10 - camera.position.y) * (0.5*3) + camera.initialpos.y-10;
//        }
//        camera.lookAt(lookatobj);
    }, false);
}

function change_camera(){
    if(camera == playerCamera){
        camera = vlCamera;
        camera.initialpos = vlCamPos;
        lookatobj = Player.bottle;
        globalDirection = -1;

    }else{
        camera = playerCamera;
        camera.initialpos = playerCamPos;
        lookatobj = Viensla.bottle;
        globalDirection = 1;


    }
}