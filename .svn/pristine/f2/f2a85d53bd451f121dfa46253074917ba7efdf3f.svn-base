

var Player = {
    score : 0,
    launched : 0,
    isPlaying : true,
    totalLaunched : 0,
    lives : 0,
    initialize : function(){

        Player.lives = Party.lives;


        bottle_geo.buffersNeedUpdate = true;
        bottle_geo.uvsNeedUpdate = true;

        this.bottle = new Physijs.CylinderMesh(
            bottle_geo,
            bottle_mat,
            320, {friction : 0.1, restitution : 0.1}
        );
        this.bottle.scale.set(10,10,10);

        this.bottle.castShadow = true;
        this.bottle.receiveShadow = true;
        this.bottle.name = 'plBottle';

        Player.place({x:0, z:92});
        Player.generateBottle();
    },
    place : function(axis){
        this.bottle.position.y = tablefootSurfaceDim[1] +tablefootSurfaceDim[1]/2+18;
        this.bottle.position.x = axis.x;
        this.bottle.position.z = axis.z;
    },
    generateBottle : function(){
        scene.add(Player.bottle);

//        this.bottle.material.map = texture;


        Player.generateCaps();
    },
    generateCaps : function(){


        var caps_material = Physijs.createMaterial(
            new THREE.MeshLambertMaterial(mat_caps.materials)
        );
        caps_material.side = 2;


        caps_material.color.setHex( cyellow );


        this.bottlecaps = new Physijs.CylinderMesh(geo_caps, caps_material, 0.3);
        this.bottlecaps.castShadow = true;
        this.bottlecaps.receiveShadow = true;

        this.bottlecaps.scale.set(capModelscale,capModelscale,capModelscale);
        this.bottlecaps.rotation.x = Math.PI;

        this.bottlecaps.position.y = Player.bottle.position.y + 19;
        this.bottlecaps.position.x = Player.bottle.position.x;
        this.bottlecaps.position.z = Player.bottle.position.z;

        this.bottlecaps.name = 'plCap';
        this.bottlecaps.collided = false;
        scene.add(Player.bottlecaps);
    }

}

var perfectShoot = [
    {
        y : 140,
        x  : -2,
        pwr : 30
    },
    {
        y : 100,
        x  : -1,
        pwr : 80
    },
    {
        y : 130,
        x  : 2,
        pwr : 35
    },
    {
        y : 180,
        x  : -2,
        pwr : 21
    }
];


var Viensla = {
    score : 0,
    launched : 0,
    totalLaunched : 0,
    isPerfect : false,
    imprecision : 10,
    isPlaying : false,
    lives : 0,
    initialize : function(){

        Player.lives = Party.lives;

        var bottle_material = Physijs.createMaterial(
            new THREE.MeshPhongMaterial( {  color: cgreen, specular: 0x666666, ambient: 0x000000, shininess: 10, shading: THREE.SmoothShading, opacity: 0.8, transparent: true, side:2 } )
        );

        this.bottle = new Physijs.CylinderMesh(
            bottle_geo,
            bottle_mat,
            320, {friction : 0.1, restitution : 0.1}
        );
        this.bottle.scale.set(10,10,10);

        this.bottle.castShadow = true;
        this.bottle.receiveShadow = true;

        this.bottle.name = 'vlBottle';

        Viensla.place({x:0, z:-92});
        Viensla.generateBottle();

    },
    place : function(axis){
        this.bottle.position.y = tablefootSurfaceDim[1] +tablefootSurfaceDim[1]/2+18;
        this.bottle.position.x = axis.x;
        this.bottle.position.z = axis.z;
    },
    generateBottle : function(){
        scene.add(Viensla.bottle);
        Viensla.generateCaps();
    },
    generateCaps : function(){

        var caps_material = Physijs.createMaterial(
            new THREE.MeshLambertMaterial(mat_caps.materials)
        );
        caps_material.side = 2;

        caps_material.color.setHex( cgreen );

        this.bottlecaps = new Physijs.CylinderMesh(geo_caps, caps_material,  0.3);
        this.bottlecaps.castShadow = true;
        this.bottlecaps.receiveShadow = true;

        this.bottlecaps.scale.set(capModelscale,capModelscale,capModelscale);
        this.bottlecaps.rotation.x = Math.PI;

        this.bottlecaps.position.y = Viensla.bottle.position.y + 19;
        this.bottlecaps.position.x = Viensla.bottle.position.x;
        this.bottlecaps.position.z = Viensla.bottle.position.z;

        this.bottlecaps.name = 'vlCap';
        this.bottlecaps.collided = false;

        scene.add(Viensla.bottlecaps);
    },
    launchCaps : function(){
        Viensla.isPlaying = true;

        var  launchVector = new THREE.Vector3,
            _vector = new THREE.Vector3,
            _angVector = new THREE.Vector3,
            _posVector = new THREE.Vector3,
            randomY = Math.random()*20 + 80,
            randomX = Math.random()*10 - 5,
            shot = Math.round(Math.random()*3);


        shot = perfectShoot[shot];

        globalDirection = -1;

        power = Math.round(shot.pwr +  (Math.random()-0.5) * Viensla.imprecision);

        randomY = Math.round(shot.y +  (Math.random()-0.5) * Viensla.imprecision);

        randomX = Math.round(shot.x +  (Math.random()-0.5) * Viensla.imprecision);


        if(Viensla.isPerfect){
            var alea = Math.round(Math.random()*3);
            randomY = perfectShoot[alea].y;
            randomX  = perfectShoot[alea].x;
            power = perfectShoot[alea].pwr;
        }

        Player.isPlaying = false;

        _posVector.set(randomX,randomY, playerDistance*globalDirection);

        create_caps('vl');

        playedCaps.position.copy(_posVector);

        playedCaps.__dirtyPosition = true;
        playedCaps.floating = false;

        _vector.set( 1, 1, 1 );
        _angVector.set( Math.random()*10, Math.random()*10, Math.random()*20);
        playedCaps.setAngularFactor( _vector );

        playedCaps.setLinearFactor( _vector );
        launchVector.set(1,-3, - power * strengh * globalDirection);
        playedCaps.setLinearVelocity( launchVector );
        playedCaps.setAngularVelocity( _angVector );

        playedCaps = null;

        Viensla.launched++;
        Viensla.totalLaunched++;

    }


}







document.addEventListener(
    'keydown',
    function( ev ) {
        console.log(ev.keyCode);
        switch( ev.keyCode ) {
            case 37:
                // Left


                break;

            case 39:
                // Right

                break;

            case 38:
                // Up

                break;

            case 40:
//                Viensla.launchCaps();
                break;

            case 32:
                // space
//                create_caps();
                break;

            case 67:
//                lookatobj = ball;
                break;

            case 86:
                console.log('bottlecaps vl');
                lookatobj = BottleViensla.bottle;
                break;

            case 66:
                lookatobj = scene;
                break;

            case 65 :
                if(axes.presence){
                    axes.traverse( function ( object ) { object.visible = false; } );
                    axes.presence = false;
                }else{
                    axes.traverse( function ( object ) { object.visible = true; } );
                    axes.presence = true;
                }
            break;

            case 13:
                change_camera();
                break;
        }
    }
);
