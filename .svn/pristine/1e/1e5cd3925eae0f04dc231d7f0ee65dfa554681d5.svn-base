

var Player = {
    score : 0,
    launched : 0,
    isPlaying : true,
    totalLaunched : 0,
    lives : 0,
    drunked : 0,
    capmat : null,
    initialize : function(){

        if(!this.capmat){
            this.capmat = caps_material.chimey.clone();
        }


        var bottle_material = new THREE.MeshBasicMaterial( {  color:Player.capmat.materials[1].color,side:2 } )


        bottle_geo.buffersNeedUpdate = true;
        bottle_geo.uvsNeedUpdate = true;

        this.bottle = new Physijs.CylinderMesh(
            bottle_geo,
            bottle_material,
            520, {friction : 0.1, restitution : 0.1}
        );
        var outline_material =  new THREE.MeshBasicMaterial( {  color: 0x0000,  shininess: 10,side:1 } );
        var outlines = new Physijs.CylinderMesh(
            bottle_geo,
            outline_material,
            0
        );

        outlines.scale.set(1.1,1.1,1.1);
        outlines.rotation.x = 0.04;
        outlines.position.z = -0.13;
        outlines.position.y = -0.15;

        var subock = new Physijs.BoxMesh(
            new THREE.CircleGeometry( 0.5, 64 ),
            new THREE.MeshLambertMaterial({
                color: 0x000000,
                side:2
            })
            , 0);
        subock.rotation.x = Math.PI/2;
        subock.position.x = 0;
        subock.position.y = -1.7;
        subock.position.z = 0;



        this.bottle.add(outlines);
        this.bottle.add(subock);

        this.bottle.scale.set(10,10,10);

        this.bottle.castShadow = true;
        this.bottle.receiveShadow = true;
        this.bottle.name = 'plBottle';


        Player.place({x:0, z:92});
        Player.generateBottle();


    },
    place : function(axis){
        this.bottle.position.y = tablefootSurfaceDim[1] +tablefootSurfaceDim[1]/2+19;
        this.bottle.position.x = axis.x;
        this.bottle.position.z = axis.z;
    },
    generateBottle : function(){
        scene.add(Player.bottle);
    },
    generateCaps : function(){
//        var materialColor = new THREE.Color();
//        materialColor.setHex( cyellow );
//        var phongMaterial = createShaderMaterial("phongDiffuse", rightLight);
//        phongMaterial.uniforms.uMaterialColor.value.copy(materialColor);
//        phongMaterial.side = THREE.DoubleSide;

//        var caps_material = Physijs.createMaterial(
//            new THREE.MeshLambertMaterial(mat_caps.materials)
////            phongMaterial
//        );

//        Player.capmat.materials[1].color.setHex(cblue);

        this.bottlecaps = new Physijs.CylinderMesh(geo_caps, Player.capmat, 0.3);
        this.bottlecaps.castShadow = true;
        this.bottlecaps.receiveShadow = true;

        this.bottlecaps.scale.set(capModelscale,capModelscale,capModelscale);
        this.bottlecaps.rotation.x = Math.PI;

        this.bottlecaps.position.y = Player.bottle.position.y + 19;
        this.bottlecaps.position.x = Player.bottle.position.x;
        this.bottlecaps.position.z = Player.bottle.position.z;


        var neck = new Physijs.CylinderMesh(
            new THREE.CylinderGeometry(2, 2, 0.4, 10, 10 ),
            Physijs.createMaterial(
                new THREE.MeshLambertMaterial({
                    color: 0xffffff,
                    transparent : true,
                    opacity:0
                }))
            ,0);
        neck.position.x = 0;
        neck.position.y = 1;
        neck.position.z = 0;

        var sub = new Physijs.CylinderMesh(
            new THREE.CylinderGeometry(1.5, 1.5, 0, 32, 32 ),
                new THREE.MeshLambertMaterial({
                    color: Player.capmat.materials[1].color,
                    transparent : true,
                    opacity:1
                })
            ,0);
        sub.position.x = 0;
        sub.position.y = 0.3;
        sub.position.z = 0;


        this.bottlecaps.add(sub);
        this.bottlecaps.add(neck);

        this.bottlecaps.name = 'plCap';
        this.bottlecaps.collided = false;
        scene.add(Player.bottlecaps);
    }

}

var perfectShoot = [
    {
        y : 140,
        x  : -2,
        pwr : 30
    },
    {
        y : 100,
        x  : -1,
        pwr : 80
    },
    {
        y : 130,
        x  : 2,
        pwr : 35
    },
    {
        y : 180,
        x  : -2,
        pwr : 21
    }
];


var Viensla = {
    score : 0,
    launched : 0,
    totalLaunched : 0,
    isPerfect : false,
    imprecision : 5,
    isPlaying : false,
    lives : 0,
    capmat : null,
    initialize : function(){

        if(!this.capmat){
            this.capmat = caps_material.ptp.clone();
        }

        var bottle_material = Physijs.createMaterial(
            new THREE.MeshBasicMaterial( {  color: Viensla.capmat.materials[1].color,  shininess: 10,side:2 } )
        );

        this.bottle = new Physijs.CylinderMesh(
            bottle_geo,
            bottle_material,
            520, {friction : 0.1, restitution : 0.1}
        );


        this.bottle.scale.set(10,10,10);

        this.bottle.castShadow = true;

        this.bottle.receiveShadow = true;

        this.bottle.name = 'vlBottle';

        var outline_material =  new THREE.MeshBasicMaterial( {  color: 0x0000,  shininess: 10,side:1 } );

        var outlines = new Physijs.CylinderMesh(
            bottle_geo,
            outline_material,
            0
        );
        outlines.scale.set(1.12,1.12,1.12);
        outlines.rotation.x = 0.04;
        outlines.position.z = -0.13;
        outlines.position.y = -0.15;

        var subock = new Physijs.BoxMesh(
            new THREE.CircleGeometry( 0.5, 64 ),
            new THREE.MeshLambertMaterial({
                color: 0x000000,
                side:2
            })
            , 0);

        subock.rotation.x = Math.PI/2;
        subock.position.x = 0;
        subock.position.y = -1.7;
        subock.position.z = 0.1;


        this.bottle.add(subock);

        this.bottle.add(outlines);




        Viensla.place({x:0, z:-92});
        Viensla.generateBottle();

    },
    place : function(axis){
        this.bottle.position.y = tablefootSurfaceDim[1] +tablefootSurfaceDim[1]/2+18;
        this.bottle.position.x = axis.x;
        this.bottle.position.z = axis.z;
    },
    generateBottle : function(){
        scene.add(Viensla.bottle);
        Viensla.generateCaps();
    },
    generateCaps : function(){

//        var materialColor = new THREE.Color();
//        materialColor.setHex( cgreen );
//        var phongMaterial = createShaderMaterial("phongDiffuse", rightLight);
//        phongMaterial.uniforms.uMaterialColor.value.copy(materialColor);
//        phongMaterial.side = THREE.DoubleSide;
//
//
//        var caps_material = Physijs.createMaterial(
////            new THREE.MeshLambertMaterial(mat_caps.materials)
//                phongMaterial
//        );
//        caps_material.side = 2;


//        Viensla.capmat.materials[1].color.setHex(ptpyellow);

        this.bottlecaps = new Physijs.CylinderMesh(geo_caps, Viensla.capmat,  0.3);
        this.bottlecaps.castShadow = true;
        this.bottlecaps.receiveShadow = true;

        this.bottlecaps.scale.set(capModelscale,capModelscale,capModelscale);
        this.bottlecaps.rotation.x = Math.PI;

        this.bottlecaps.position.y = Viensla.bottle.position.y + 19;
        this.bottlecaps.position.x = Viensla.bottle.position.x;
        this.bottlecaps.position.z = Viensla.bottle.position.z;

        var neck = new Physijs.CylinderMesh(
            new THREE.CylinderGeometry(2, 2, 0.4, 10, 10 ),
            Physijs.createMaterial(
                new THREE.MeshLambertMaterial({
                    color: 0xffffff,
                    transparent : true,
                    opacity:0
                }))
            ,0);
        neck.position.x = 0;
        neck.position.y = 1;
        neck.position.z = 0;

        this.bottlecaps.add(neck);

        this.bottlecaps.name = 'vlCap';
        this.bottlecaps.collided = false;

        scene.add(Viensla.bottlecaps);
    },
    launchCaps : function(){
        Viensla.isPlaying = true;

        var  launchVector = new THREE.Vector3,
            _vector = new THREE.Vector3,
            _angVector = new THREE.Vector3,
            _posVector = new THREE.Vector3,
            randomY = Math.random()*20 + 80,
            randomX = Math.random()*10 - 5,
            shot = Math.round(Math.random()*3);


        shot = perfectShoot[shot];

        globalDirection = -1;

        power = Math.round(shot.pwr +  (Math.random()-0.5) * Viensla.imprecision);

        randomY = Math.round(shot.y +  (Math.random()-0.5) * Viensla.imprecision);

        randomX = Math.round(shot.x +  (Math.random()-0.5) * Viensla.imprecision);


        if(Viensla.isPerfect){
            var alea = Math.round(Math.random()*3);
            randomY = perfectShoot[alea].y;
            randomX  = perfectShoot[alea].x;
            power = perfectShoot[alea].pwr;
        }

        Player.isPlaying = false;

        _posVector.set(randomX,randomY, playerDistance*globalDirection);

        create_caps('vl');

        playedCaps.position.copy(_posVector);

        playedCaps.__dirtyPosition = true;
        playedCaps.floating = false;

        _vector.set( 1, 1, 1 );
        _angVector.set( Math.random()*10, Math.random()*10, Math.random()*20);
        playedCaps.setAngularFactor( _vector );

        playedCaps.setLinearFactor( _vector );
        launchVector.set(1,-3, - power * strengh * globalDirection);
        playedCaps.setLinearVelocity( launchVector );
        playedCaps.setAngularVelocity( _angVector );

        playedCaps = null;

    }


}







document.addEventListener(
    'keydown',
    function( ev ) {
        console.log(ev.keyCode);
        switch( ev.keyCode ) {
            case 37:
                // Left


                break;

            case 39:
                // Right

                break;

            case 38:
                // Up

                break;

            case 40:
//                Viensla.launchCaps();
                break;

            case 32:
                // space
//                create_caps();
                break;

            case 67:
//                lookatobj = ball;
                break;

            case 86:
                console.log('bottlecaps vl');
                lookatobj = BottleViensla.bottle;
                break;

            case 66:
                lookatobj = scene;
                break;

            case 65 :
                if(axes.presence){
                    axes.traverse( function ( object ) { object.visible = false; } );
                    axes.presence = false;
                }else{
                    axes.traverse( function ( object ) { object.visible = true; } );
                    axes.presence = true;
                }
            break;

            case 13:
                change_camera();
                break;
        }
    }
);
