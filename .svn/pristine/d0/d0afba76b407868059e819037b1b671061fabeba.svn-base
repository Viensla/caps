var timeoutRobot;


/*var perfectPlayer;
function playerReady(event){
    perfectPlayer.mute();
}

function onytplayerStateChange(newState) {
    if ( newState.data == 0 ) {
//        player.playVideo();
    }
}

function onYouTubeIframeAPIReady() {
    console.log('youtubeload');
}
function perfectGift(){
    TweenMax.fromTo($('#perfect-player'), 0.6, {scale:0, opacity:0},{scale:1, display:'block', opacity:1, ease:Elastic.easeOut.config(1, 0.4)});
    perfectPlayer.playVideo();
    TweenMax.to($('#perfect-player'), 0.5, {scale:0, opacity:0, ease:Elastic.easeOut.config(1, 0.4), delay:5});
}*/

var Party = {
    isPlaying : false,
    capsPerTurn : 1,
    lives : 60,
    create : function(){
        Viensla.generateCaps();

        Viensla.score = Player.score = Viensla.launched = Player.launched = 0;
        Viensla.lives = Player.lives = Party.lives;

        Party.isPlaying = true;

        this.resetStocks();

        if(!CAPS.solo){
            Viensla.isPlaying = Game.role == 'Player';
            Player.isPlaying = Game.role == 'Host';
        }else{
            Viensla.isPlaying = false;
            Player.isPlaying = true;
        }

        $vlpart.fadeIn(function(){
            Party.setLife();
        });

        $plpart.fadeIn();

        Player.generateCaps();

        if(!Interface.txtoRdy)
            Interface.textoBox.init();

        setTimeout(function(){
            $('#game-loader .tiny-loader').addClass('fade');
            setTimeout(function(){
                $('#game-loader').addClass('fade');
                setTimeout(function(){
                    $('#game-loader').remove();
                    animTypo($startTypo);
                    Party.setTurn();
                    Snds.fadInSd('ambiance');
                    Snds.playSd('open');
                }, 500);
            }, 1000);
        }, 2000);
    },

    resetParty: function(){
        var $resetC = $('#reset-party-c');

        Viensla.score = Player.score = Viensla.launched = Player.launched = 0;
        Viensla.lives = Player.lives = Party.lives;
        Player.drunked = 1;

        Party.isPlaying = true;

        Party.setLife();

        if(!CAPS.solo){
//            Viensla.isPlaying = Game.role == 'Player';
//            Player.isPlaying = Game.role == 'Host';
        }else{
            Viensla.isPlaying = false;
            Player.isPlaying = true;
        }

        Party.setTurn();

        TweenMax.to($resetC, 1, {opacity:0, onComplete:function(){
            TweenMax.set($resetC,{display:'none'});
            animTypo($startTypo);
            Snds.playSd('open');
            TweenMax.set($resetC.find('h4'),{scale:0.5, opacity:0, height:0});
        }});

    },
    setTurn:function(){
        if(Player.isPlaying){
            $('#versus-bar #cursor').removeClass().addClass('lf');
            TweenMax.to($('#you-turn'), 1.5, {x:40, opacity:1, ease:Elastic.easeOut.config(1, 0.4),  delay:1.8});
            TweenMax.to($('#you-turn'), 1, {x:-170, opacity:0, ease:Elastic.easeOut.config(1, 0.4), delay:4.5});

            if(Player.totalLaunched < 3)
                Interface.capTuto.show();

        }else {
            $('#versus-bar #cursor').removeClass().addClass('rg');
        }
    },

    vlplay : function(){

        if(this.isPlaying && CAPS.solo){
            if(Viensla.launched < Party.capsPerTurn && !Player.isPlaying){

                $vlpart.find('.capsstock span').eq(Viensla.launched).removeClass().addClass('animated zoomOut');

                Viensla.isPlaying = true;
                Player.isPlaying = false;
                Viensla.launchCaps();
                Viensla.launched++;
                Viensla.totalLaunched++;

                Player.isPlaying = true;
                Player.launched = 0;
                Viensla.isPlaying = false;


                Party.setTurn();
                this.resetStocks();

            }
        }
    },

    plplay : function(){
        if(this.isPlaying){

            if(Player.launched < Party.capsPerTurn && !Viensla.isPlaying){
                globalDirection = 1;
                create_caps('pl');
                Player.isPlaying = true;
                Viensla.isPlaying = false;
            }
        }
    },

    vlcaps : function(){
        if(this.isPlaying){
            Viensla.isPlaying = false;
            Player.isPlaying = true;
            Viensla.score++;
            Player.drunked += 2;
            Player.lives -= 10;

            this.animCaps();

            if(Viensla.launched < Party.capsPerTurn-1){

                setTimeout(function(){
                    Party.resetStocks();
                }, 2000);
            }
            setTimeout(function(){
                Player.generateCaps();
            }, 2000);

            Party.setLife();
        }
    },


    plcaps : function(){
        var txtos = [2, 4, 5, 7];

        if(this.isPlaying){
            Player.score++;
            Viensla.lives -= 10;
            Player.isPlaying = false;
            Viensla.isPlaying = true;

            Game.Player.playerCaps();

            if(Viensla.lives==0 && Player.lives==Party.lives){
                animTypo($perfectTypo);
//                this.doPerfectBalls();
//                perfectGift();
            }else{
                this.animCaps();

            }
            setTimeout(function(){
                Viensla.generateCaps();
            }, 2000);
            Party.setLife();

        }

    },

    resetStocks : function(){
        if(this.isPlaying){
            $('.capsstock span.zoomOut').removeClass('zoomOut').addClass('zoomIn');
            Viensla.launched = 0;
            Player.launched = 0;
        }

        if(Player.drunked > 11){
            Player.drunked -= 2;
        }
    },

    setLife : function(){
        if(this.isPlaying){
            var pctPlLife = Math.round(Player.lives / Party.lives * 100);
            var pctVlLife = Math.round(Viensla.lives / Party.lives * 100);

            $plpart.find('.life').height(pctPlLife+"%");
            $vlpart.find('.life').height(pctVlLife+"%");

            if(pctPlLife <= 0 || pctVlLife <= 0){
                Party.isPlaying = false;
                setTimeout(function(){

                    if(pctPlLife <= 0){
                        animTypo($loseTypo, 800);
                        Snds.playSd('lose');
                        setTimeout(Snds.playSd('clairon'), 3000);
                        $('#reset-party-c').removeClass().addClass('looser').find('h3').text("Une petite revanche ?");

                        if(CAPS.solo){
                            Viensla.imprecision += 2;
                        }
                    }else if(pctVlLife <= 0){
                        animTypo($winTypo, 800);
                        Snds.playSd('win');
                        $('#reset-party-c').removeClass().addClass('winner').find('h3').text("On prendra bien la ptite soeur ?");
                        setTimeout(Snds.playSd('applause'), 3000);
                        Viensla.imprecision = Math.max(0, Viensla.imprecision - 2);
                    }

                    TweenMax.to($('#reset-party-c'), 1, {opacity:1, display:'block', delay:3});

                }, 1600);
            }
        }
    },
    animCaps : function(){
        animTypo($capsTypo);
    },
//    doPerfectBalls: function(){
//        var i = 0;
//        var launchVector = new THREE.Vector3,
//            _vector = new THREE.Vector3,
//            _angVector = new THREE.Vector3;
//
//        _vector.set( 1, 2, 1 );
//
//        var intv = setInterval(function(){
//            i++;
//            createBall();
//            if(i> 50){
//                clearInterval(intv);
//                setTimeout(function(){
//                    Viensla.generateCaps();
//                }, 3000)
//            }
//        }, 20);
//        var ballMat = new THREE.MeshBasicMaterial({
//                color: 0xffffff,
//                transparent : true,
//                opacity:0.5
//            });
//        function createBall(){
//            var rdms = [
//                Math.random()*20-10,
//                Math.random()*20-10,
//                Math.random()*20-10
//            ];
//            var ballGeo = new THREE.SphereGeometry( Math.random()*2, 8, 8 );
//
//            _angVector.set( rdms[0], rdms[1], rdms[2]);
//            launchVector.set(rdms[0],120,rdms[2]);
//
//            var newBall = new Physijs.CylinderMesh(ballGeo, ballMat);
//
//            newBall.die = function(){
//                var b = this;
//                setTimeout(function(){
//                    scene.remove(b);
//                }, 3000);
//            };
//
//            scene.add(newBall);
//
//            newBall.__dirtyPosition = true;
//            newBall.position.y = Player.bottle.position.y + 26;
//            newBall.position.x = Player.bottle.position.x;
//            newBall.position.z = Viensla.bottle.position.z;
//            newBall.setAngularFactor( _vector );
//            newBall.setLinearFactor( _vector );
//            newBall.setLinearVelocity( launchVector );
//            newBall.setAngularVelocity( _angVector );
//
//            newBall.die();
//        }
//    },
//    doPerfect : function(){
//
//    }
};






function animTypo($el, pauseDelay){
    if(typeof pauseDelay == 'undefined')
        pauseDelay = 300;

    var delay = 400;
    $el.attr('class', 'capsIn1');
    setTimeout(function(){
        $el.attr('class', 'capsIn2');
        setTimeout(function(){
            $el.attr('class', 'capsIn3');
            setTimeout(function(){
                $el.attr('class', '');
            },delay);
        },delay+pauseDelay);
    },delay);
}
