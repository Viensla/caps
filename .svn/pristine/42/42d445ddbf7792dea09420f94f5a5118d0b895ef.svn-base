var Party = {
    isPlaying : false,
    capsPerTurn : 1,
    lives : 60,
    delayToPlay: 40,
    timeout: null,
    intervalCount:null,
    intervalCountVl:null,
    playerLeaveTimeout:null,
    turnTimeout:null,
    create : function(){
        Viensla.generateCaps();

        Viensla.score = Player.score = Viensla.launched = Player.launched = 0;
        Viensla.lives = Player.lives = Party.lives;

        Party.isPlaying = true;

        this.resetStocks();

        if(!CAPS.solo){
            Viensla.isPlaying = Game.role == 'Player';
            Player.isPlaying = Game.role == 'Host';
        }else{
            Viensla.isPlaying = false;
            Player.isPlaying = true;
        }

        $vlpart.fadeIn(function(){
            Party.setLife();
        });

        $plpart.fadeIn();

        Player.generateCaps();

        if(!Interface.txtoRdy)
            Interface.textoBox.init();

        this.timeout = setTimeout(function(){},0);
        this.intervalCount = setInterval(function(){},100000);

        setTimeout(function(){
            $('#game-loader .tiny-loader').addClass('fade');
            setTimeout(function(){
                $('#game-loader').addClass('fade');
                setTimeout(function(){
                    $('#game-loader').remove();
                    animTypo($startTypo);
                    Party.setTurn();
                    Snds.fadInSd('ambiance');
                    Snds.playSd('open');

                    var cookie = Cookies.get("tutorial");

                    if(!cookie){
                        setTimeout(function(){
                            $('#bt-menu').click();
                            $('#lk-tuto').click();
                            Cookies.set("tutorial", 1, { expires : 10 });
                        },1000);
                    }
                }, 500);
            }, 1000);
        }, 2000);
    },

    resetParty: function(){
        var $resetC = $('#reset-party-c');

        Viensla.score = Player.score = Viensla.launched = Player.launched = 0;
        Viensla.lives = Player.lives = Party.lives;
        Player.drunked = 1;

        Party.isPlaying = true;

        Party.setLife();

        if(!CAPS.solo){
//            Viensla.isPlaying = Game.role == 'Player';
//            Player.isPlaying = Game.role == 'Host';
        }else{
            Viensla.isPlaying = false;
            Player.isPlaying = true;
        }

        Party.setTurn();

        camera.initialpos = new THREE.Vector3( 0, 160, 165 );

        TweenMax.to($resetC, 1, {opacity:0, onComplete:function(){

            TweenMax.set($resetC,{display:'none'});
            animTypo($startTypo);
            Snds.playSd('open');
            TweenMax.set($resetC.find('h4'),{scale:0.5, opacity:0, height:0});
        }});

    },


     vlplay : function(){

        if(this.isPlaying && CAPS.solo){
            if(Viensla.launched < Party.capsPerTurn && !Player.isPlaying){

                $vlpart.find('.capsstock span').eq(Viensla.launched).removeClass().addClass('animated zoomOut');

                Viensla.isPlaying = true;
                Player.isPlaying = false;
                Viensla.launchCaps();
                Viensla.launched++;
                Viensla.totalLaunched++;

                Player.isPlaying = true;
                Player.launched = 0;
                Viensla.isPlaying = false;


                Party.setTurn();
                this.resetStocks();

            }
        }
    },

    plplay : function(){
        if(this.isPlaying){

            if(Player.launched < Party.capsPerTurn && !Viensla.isPlaying){
                globalDirection = 1;
                create_caps('pl');
                Player.isPlaying = true;
                Viensla.isPlaying = false;
            }
        }
    },

    vlcaps : function(){
        if(this.isPlaying){
            Viensla.isPlaying = false;
            Player.isPlaying = true;
            Viensla.score++;
            Player.drunked += 2;
            Player.lives -= 10;
            var perfect = false;

            if(Player.lives==0 && Viensla.lives==Party.lives){
                animTypo($perfectTypo, 800);
                perfect=true;

            }else{
                this.animCaps();
            }

            if(Viensla.launched < Party.capsPerTurn-1){

                setTimeout(function(){
                    Party.resetStocks();
                }, 2000);
            }
            setTimeout(function(){
                Player.generateCaps();
            }, 2000);

            Party.setLife(perfect);
        }
    },


    plcaps : function(){
        var txtos = [2, 4, 5, 7];

        if(this.isPlaying){
            Player.score++;
            Viensla.lives -= 10;
            Player.isPlaying = false;
            Viensla.isPlaying = true;

            Game.Player.playerCaps();

            var perfect = false;

            if(Viensla.lives==0 && Player.lives==Party.lives){
                animTypo($perfectTypo, 800);
                perfect=true;
            }else{
                this.animCaps();
            }
            setTimeout(function(){
                Viensla.generateCaps();
            }, 2000);

            Party.setLife(perfect);
        }

    },

    resetStocks : function(){
        if(this.isPlaying){
            $('.capsstock span.zoomOut').removeClass('zoomOut').addClass('zoomIn');
            Viensla.launched = 0;
            Player.launched = 0;
        }

        if(Player.drunked > 11){
            Player.drunked -= 2;
        }
    },
    setTurn:function(){

        if(!CAPS.solo) Party.refreshDelay();

        if(Player.isPlaying){
            $('#versus-bar #cursor').removeClass().addClass('lf');

            this.turnTimeout = setTimeout(function(){
                if(Party.isPlaying){
                    TweenMax.to($('#you-turn'), 1.5, {x:40, opacity:1, ease:Elastic.easeOut.config(1, 0.4),  delay:0});
                    TweenMax.to($('#you-turn'), 1, {x:-170, opacity:0, ease:Elastic.easeOut.config(1, 0.4), delay:2.7});
                    if(Player.totalLaunched < 3)
                        Interface.capTuto.show();
                }
            }, 1800);



        }else {
            $('#versus-bar #cursor').removeClass().addClass('rg');
        }

        TweenLite.to($cp, 0.3, {scale:0, opacity:0});
        TweenLite.to($vs, 0.3, {scale:1, opacity:1, delay:0.2});

    },
    setLife : function(perfect){

        if(typeof perfect == 'undefined')
            perfect = false;

        var delay = perfect ? 2600 : 1600;
        if(this.isPlaying){
            var pctPlLife = Math.round(Player.lives / Party.lives * 100);
            var pctVlLife = Math.round(Viensla.lives / Party.lives * 100);

            $plpart.find('.life').height(pctPlLife+"%");
            $vlpart.find('.life').height(pctVlLife+"%");

            if(pctPlLife <= 0 || pctVlLife <= 0){
                $('#share-tw-c iframe').remove();
                Party.clearPlayerTimeout();
                clearTimeout(Party.turnTimeout);
                Party.isPlaying = false;

                setTimeout(function(){
                    var share_text = "";
                    if(pctPlLife <= 0){
                        animTypo($loseTypo, 800);
                        Snds.playSd('lose');
                        setTimeout(Snds.playSd('clairon'), 3000);
                        var reset_text = LANG == 'en' ? "Revenge" : "Une petite revanche ?";
                        $('#reset-party-c').removeClass().addClass('looser').find('h3').text(reset_text);
                        if(CAPS.solo){
                            Viensla.imprecision += 2;
                        }
                        share_text = LANG=='en' ?
                            Game.Enemy.name+" kicked my ass at 'Caps' ! I'm not giving up ! Who's next ?"
                            : "Je me suis fait éclater par "+Game.Enemy.name+" au caps ! J'en veux encore ! À qui le tour ?";

                    }else if(pctVlLife <= 0){
                        animTypo($winTypo, 800);
                        Snds.playSd('win');
                        var reset_text = LANG == 'en' ? "Another round ?" : "On prendra bien la ptite soeur ?";
                        $('#reset-party-c').removeClass().addClass('winner').find('h3').text(reset_text);
                        setTimeout(Snds.playSd('applause'), 3000);
                        Viensla.imprecision = Math.max(0, Viensla.imprecision - 2);

                        share_text = LANG=='en' ?
                            "I kicked "+Game.Enemy.name+"'s ass at 'Caps' ! Who's next ?"
                            : "J'ai éclaté "+Game.Enemy.name+" au caps ! À qui le tour ?";
                    }

                    $fbUrlLink.off('click', shareFb);
                    shareFb = function(){
                        console.log(share_text);
                        FB.ui({
                                method: 'feed',
                                name: share_text,
                                link: 'http://www.payetoncaps.com',
                                picture:'http://www.payetoncaps.com/images/logo/fb-logo.png',
                                caption: 'Paye ton caps !',
                                description: LANG=='en' ? "Have a nice time, play Caps!" : 'Viens faire une petite partie de Caps !'
                            },
                            function(response) {}
                        );
                    };
                    $fbUrlLink.on('click', shareFb);


                    twttr.widgets.createShareButton(
                        'http://www.payetoncaps.com',
                        document.getElementById('share-tw-c'),
                        {
                            text: share_text,
                            size:'large',
                            count:'none'
                        }
                    );

                    TweenMax.to($('#reset-party-c'), 1, {opacity:1, display:'block', delay:3});

                }, delay);
            }
        }
    },
    animCaps : function(){
        animTypo($capsTypo);
    },
    refreshDelay:function(){

        clearTimeout(Party.timeout);
        clearInterval(Party.intervalCount);

        var i = Party.delayToPlay;

//        $cp.text(i);

        if(Player.isPlaying){

            clearInterval(Party.intervalCountVl);
            $vlLine.css({width:0});

            TweenLite.to($cp, 0.3, {scale:0, opacity:0});
            TweenLite.to($vs, 0.3, {scale:1, opacity:1, delay:0.2});

            Party.timeout = setTimeout(function(){

                if(Player.isPlaying && !Viensla.isPlaying){
                    Player.isPlaying = false;
                    Viensla.isPlaying = true;
                    Party.resetStocks();
                    Party.setTurn();
                    playedCaps = null;
                    $powerBar.fadeOut();
                    holdingDown = false;
                    if(Player.totalLaunched < 4){
                        Interface.launchTuto.hide();
                    }
                    Game.Player.playerTimeout();
                }
            }, Party.delayToPlay*1000);

            Party.intervalCount = setInterval(function(){

                i--;

                $plLine.css({width:i/Party.delayToPlay * 200});

                if(i==Party.delayToPlay/2){
                    $cp.text(i);
                    TweenLite.to($vs, 0.3, {scale:0, opacity:0});
                    TweenLite.to($cp, 0.3, {scale:1, opacity:1, delay:0.2});
                }else if(i < Party.delayToPlay/2){
                    $cp.text(i);
                }

                if(i==0){
                    $cp.text(0);
                    $plLine.css({width:0});
                    clearInterval(Party.intervalCount);
                }
            }, 1000);
        }else{
            Party.intervalCountVl = setInterval(function(){
                i--;
                $vlLine.css({width:i/Party.delayToPlay * 200});
                if(i==0){
                    clearInterval(Party.intervalCountVl);
                    $vlLine.css({width:0});
                    TweenLite.to($cp, 0.3, {scale:0, opacity:0});
                    TweenLite.to($vs, 0.3, {scale:1, opacity:1, delay:0.2});

                    Party.playerLeaveTimeout=setTimeout(function(){
                        Party.enemyTimeout();
                    }, 5000);
                }
            }, 1000);
        }

        Party.delayToPlay=16;
    },

    enemyTimeout : function(){
        Viensla.isPlaying = false;
        Player.isPlaying = true;
        Party.resetStocks();
        Party.setTurn();
        $vlLine.css({width:0});
        clearInterval(Party.intervalCountVl);
        clearTimeout(Party.playerLeaveTimeout);
        TweenLite.to($cp, 0.3, {scale:0, opacity:0});
        TweenLite.to($vs, 0.3, {scale:1, opacity:1, delay:0.2});
    },

    clearPlayerTimeout:function(){
        clearInterval(Party.intervalCount);
        clearInterval(Party.intervalCountVl);
        clearTimeout(Party.playerLeaveTimeout);
        clearTimeout(Party.timeout);
        TweenLite.to($cp, 0.3, {scale:0, opacity:0});
        TweenLite.to($vs, 0.3, {scale:1, opacity:1, delay:0.2});

        $plLine.css({width:0});
    }

};

var shareFb;






function animTypo($el, pauseDelay){
    if(typeof pauseDelay == 'undefined')
        pauseDelay = 300;

    var delay = 400;
    $el.attr('class', 'capsIn1');
    setTimeout(function(){
        $el.attr('class', 'capsIn2');
        setTimeout(function(){
            $el.attr('class', 'capsIn3');
            setTimeout(function(){
                $el.attr('class', '');
            },delay);
        },delay+pauseDelay);
    },delay);

    if($el == $perfectTypo){
        Snds.playSd('perfect');

        var aleaGif = Math.ceil(Math.random()*10);

        $('#perfect-b').removeClass().addClass('g'+aleaGif);

        $('#perfect-b').addClass('active');

        setTimeout(function(){
            $('#perfect-b').removeClass('active');

            setTimeout(function(){
                $('#perfect-b').removeClass();
            },1000);
        },2500);
    }
}
