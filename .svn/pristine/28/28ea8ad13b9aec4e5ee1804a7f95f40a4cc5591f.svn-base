var socket = io.connect();
var canvas, ctx;
var Game;
jQuery(function($){
    var IO = {

        init: function() {
            IO.socket = socket;
            IO.bindEvents();
        },

        bindEvents : function() {
            IO.socket.on('connected', IO.onConnection);
            IO.socket.on('newGameCreated', IO.onNewGameCreated );
            IO.socket.on('playerJoinedRoom', IO.playerJoinedRoom );
            IO.socket.on('createNewPlayer', IO.createNewPlayer);
            IO.socket.on('startParty', IO.onStartParty);

            IO.socket.on('playerUpdateMove', Game.Host.playerUpdateMove);
            IO.socket.on('playerUpdateLaunch', Game.Host.playerUpdateLaunch);
            //Display errors
            IO.socket.on('error', IO.error );
        },

        onConnection : function(data) {
            Game.socketId = IO.socket.socket.sessionid;
            console.log(data.message);
        },

        onNewGameCreated : function(data){
            Game.Host.gameInit(data);
        },

        playerJoinedRoom : function(data) {
            Game[Game.role].updateWaitingScreen(data);
        },

        createNewPlayer : function(data){
//            console.log(data);
        },

        onStartParty: function(data){
            Game[Game.role].showPartyScreen(data);
        },

        error : function(data) {
            alert(data.message);
        }
    };

    Game = {
        gameId : 0,
        role : '',
        socketId : '',
        partyOn: false,

        init : function(){
            Game.cacheScreens();
            Game.bindEvents();
            Game.showIntroTpl();
        },

        bindEvents: function () {
            // Host
            Game.$doc.on('click', '#btnCreateGame', Game.Host.onCreateClick);
            Game.$doc.on('click', '#btnStartParty',Game.Host.onStartPartyClick);

            // Player
            Game.$doc.on('click', '#btnJoinGame', Game.Player.onJoinClick);
            Game.$doc.on('click', '#btnStart',Game.Player.onPlayerStartClick);

//            Game.$doc.on('mousemove', Game.Player.playerMoving)
        },

        cacheScreens : function(){
            Game.$doc = $(document);

            // Templates
            Game.$area = $('#game-area');
            Game.$tplIntroScreen = $('#intro-screen-template').html();
            Game.$tplNewGame = $('#new-game-screen-template').html();
            Game.$tplJoinGame = $('#join-game-template').html();
            Game.$tplGamerScreen = $('#gamer-screen-template').html();
            Game.$tplPartyScreen = $('#party-screen-template').html();
        },
        showIntroTpl : function(){
            Game.$area.html(Game.$tplIntroScreen);
            console.log('Intro screen displayed');
        },




        // HOST -------------------------------------------------------------------------------------------------------------------

        Host : {
            players : [],
            numPlayersInRoom : 0,
            onCreateClick: function () {
                console.log('Clicked "Create A Game"');
                IO.socket.emit('hostCreateNewGame');
            },

            gameInit: function (data) {
                Game.gameId = data.gameId;
                Game.socketId = data.socketId;
                Game.role = 'Host';
                Game.Host.numPlayersInRoom = 0;
                Game.Host.displayNewGameScreen();

                console.log("Game started with ID: " + Game.gameId + ' by host: ' + Game.socketId);

            },

            displayNewGameScreen : function() {
                // Fill the game screen
                Game.$area.html(Game.$tplNewGame);

                // Display the URL on screen
                $('#url-connect').text(window.location.href);

                // Show the gameId on screen
                $('#code-connect').text(Game.gameId);

                Game.$area.append(Game.$tplJoinGame);
            },

            updateWaitingScreen: function(data) {
                // Update host screen
                $('#playersWaiting').append('<p>Player ' + data.playerName + ' joined the game.</p>');
                // Store the new player's data on the Host.
                Game.Host.players.push(data);

                Player.name = data.playerName;

                // Increment the number of players in the room
                Game.Host.numPlayersInRoom += 1;

                if (Game.Host.numPlayersInRoom > 1) {
                    IO.socket.emit('hostRoomReady',Game.gameId);
                    $('#cacheStartParty').show();
                }
            },

            onStartPartyClick: function(){
                IO.socket.emit('hostStartParty', {gameId : Game.gameId, hostPlayer : Game.Host.players});
            },

            showPartyScreen: function(){
                var i = 0;

                Game.partyOn = true;

                Game.$area.html(Game.$tplPartyScreen);

                Game.$area.html($('#caps-game'));

                Game.Host.players.forEach(function(player){
                    $('#score').append('<p id="score-'+player.socketId+'">'+player.playerName+' : <span class="score-value"></span></p>');
                    i++;
                });

                CAPS.launchGame();
            },

            playerUpdateMove:function(data){
                if(data.playerName == Game.Player.name){

                }else{
                    Viensla.livePos.x = data.pos.x;
                    Viensla.livePos.y = data.pos.y-16;
                    Viensla.liveVector = new THREE.Vector3(Viensla.livePos.x,Viensla.livePos.y, Viensla.livePos.z);
                }
            },

            playerUpdateLaunch:function(data){
                if(data.playerName == Game.Player.name){

                }else{
                    console.log(data.shot);
                    Viensla.shootCaps(data.shot);
                }
            }

        },
        // PlAYERS -------------------------------------------------------------------------------------------------------------------

        Player : {
            hostSocketId: '',
            name: '',
            socketId : '',
            onJoinClick: function () {
                // Display the Join Game HTML on the player's screen.
                Game.$area.html(Game.$tplJoinGame);
            },
            onPlayerStartClick: function() {
                // collect data to send to the server
                var data = {
                    gameId : +($('#inputGameId').val()),
                    playerName : $('#inputPlayerName').val() || 'Anonymous',
                    x: 0,
                    y: 0
                };

                // Send the gameId and playerName to the server
                IO.socket.emit('playerJoinGame', data);

                // Set the appropriate properties for the current player.
                if(Game.role != 'Host')
                    Game.role = 'Player';

                Game.Player.name = data.playerName;
            },

            updateWaitingScreen : function(data) {
                if(IO.socket.socket.sessionid === data.socketId){
                    Game.role = 'Player';
                    Game.gameId = data.gameId;
                    $('#playerWaitingMessage').text('Joined Game ' + data.gameId + '. Please wait for game to begin.');
                }
            },
            showPartyScreen: function(data){
                var i = 0;
                Game.$area.html(Game.$tplPartyScreen);
                Game.partyOn = true;
                Game.Host.players = data.hostPlayer;
                Game.$area.html($('#caps-game'));

                Game.Host.players.forEach(function(player){
                    $('#score').append('<p id="score-'+player.socketId+'">'+player.playerName+' : <span class="score-value"></span></p>');
                    i++;
                });
                CAPS.launchGame();
            },

            playerMoving : function(data){
                IO.socket.emit('playerMove', {
                    playerName: Game.Player.name,
                    gameId: Game.gameId,
                    pos:data
                });
            },

            playerLaunch : function(data){
                IO.socket.emit('playerShoot', {
                    playerName: Game.Player.name,
                    gameId: Game.gameId,
                    shot:data
                });
            }
        }
    };

    IO.init();
    Game.init();

}($));