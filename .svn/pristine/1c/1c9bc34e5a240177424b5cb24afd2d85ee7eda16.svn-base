var generatedNames = [
    "Merlin l'Emmancheur",
    "Sac à bière",
    "Maître Brasseur",
    "Chuck Boris",
    "Vomito",
    "Fredo Mercure",
    "The Undertaker",
    "Capsulator",
];

var Interface = {
    $currentPart : null,
    curIndex: 0,
    init : function(){

        $plpart = $('.pl-part');
        $vlpart = $('.vl-part');
        $capsTypo = $('#caps-m');
        $startTypo = $('#start-m');
        $winTypo = $('#win-m');
        $loseTypo = $('#lose-m');
        $perfectTypo = $('#perfect-m');

        this.resize();
        this.initWelcome();
        this.initResetParty();

        this.initMenu();

        window.addEventListener( 'resize', Interface.resize, false );


    },
    resize : function(){
        $('section.sc').css({height: window.innerHeight, lineHeight: window.innerHeight+"px"});
        $('#wrapper').css({width: window.innerWidth, height: window.innerHeight});
        TweenLite.set($('#site-content'),{y : -Interface.curIndex*window.innerHeight});
    },
    navigate : function(to){
        if(to == 3){
            this.initPickName();
        }else if(to == 4){
            this.initCapsSelect();
        }else if(to == 6){
            CAPS.launchGame();
            this.textoBox.init();
        }
        TweenLite.to($('#site-content'), 0.3, {y : -to*window.innerHeight});
        this.curIndex = to;

    },
    initWelcome : function(){
        var $welcome = $('#welcome'),
            $pelle = $welcome.find('.cp-pelle'),
            $foster = $welcome.find('.cp-foster'),
            $logo = $welcome.find('.logo'),
            $water = $welcome.find('.water'),
            $soloBtn = $welcome.find('#bt-play-solo'),
            $multiBtn = $welcome.find('#bt-play-online');

        this.$currentPart = $welcome;

        var tms = [
            new TimelineMax({paused:true, repeat:-1, yoyo:true}),
            new TimelineMax({paused:true, repeat:-1, yoyo:true}),
            new TimelineMax({paused:true, repeat:-1, yoyo:true}),
            new TimelineMax({paused:true, repeat:-1, yoyo:true})
        ];

        var time = 8;

        tms[0].add(TweenMax.fromTo( $pelle,time,
            {x:-5, y:0, rotation:0, scale:0.85}, {x:-15, y:-10, rotation:6, scale:1}
        ));

        tms[1].add(TweenMax.fromTo( $foster,time,
            {x:0, y:0, rotation:0, scale:0.85}, {x:8, y:-4, rotation:-6, scale:1}
        ));

        tms[2].add(TweenMax.fromTo($logo ,time,
            {x:0, y:0, rotation:0, scale:0.9}, {x:8, y:3, rotation:4, scale:1}
        ));

        tms[3].add(TweenMax.fromTo( $water,time,
            {x:0, y:0, rotation:0, scale:0.8}, {x:0, y:0, rotation:-4, scale:1}
        ));
        tms[0].play();
        tms[1].play();
        tms[2].play();
        tms[3].play();

        initializeParty();

        $soloBtn.click(function(){
            Interface.navigate(3);
            CAPS.solo = true;
        });
        $multiBtn.click(function(){
            Interface.navigate(1);
            Interface.initMulti();
        });


    },



    initMulti : function(hash){


        if(hash){
            $('#join-code').val(hash);
            Game.Player.onPlayerStartClick();
        }else{
            var $multi = $('#multiplayer'),
                $generateCode = $multi.find('#host-party'),
                $startParty = $multi.find('#start-party'),
                $joinParty = $multi.find('#join-party');

            $generateCode.on('click', Game.Host.onCreateClick);
            $joinParty.on('click', Game.Player.onPlayerStartClick);
            $startParty.on('click', Game.Player.onPlayerStartClick);
        }


    },

    initPickName : function(){
        var $pickname = $('#pickname'),
            $generateName = $pickname.find('#bt-generate-name'),
            $sendName = $pickname.find('#bt-send-name'),
            namesCopy = generatedNames.slice();

        $sendName.on('click', function(){
            Game.Player.name = $('#input-player-name').val() || generatedNames[Math.round(Math.random()*(generatedNames.length-1))];
            Interface.navigate(4);
        });

        $generateName.on('click', function(){
            var rd = Math.round(Math.random()*(namesCopy.length-1));
            var name = (namesCopy.splice(rd, 1)).toString();
            var full = '';
            var i = 0;
            var $input =  $('#input-player-name');

            var nameItv = setInterval(function(){
                full += name.charAt(i);
                $input.val(full);
                i++;
                if(i == name.length){
                    clearInterval(nameItv);
                }
            }, 30);
            if(namesCopy.length == 0){
                namesCopy = generatedNames.slice();
            }
        });

    },

    initCapsSelect: function(){
        var $slideShow = $('#beer-slide-c'),
            $capSlides = $slideShow.find('.cap-list li'),
            $bgSlides = $('#beer-bg-slider li'),
            $navBtm = $slideShow.find('.nav-bottle li'),
            $arr = $slideShow.find('.arw'),
            curSlide = 0,
            $sendCaps = $('#bt-send-caps');

        $navBtm.click(function(){
            var i = $(this).index();
            changeSlide(i);
        });

        $arr.click(function(){
            var i = 0;
            if($(this).hasClass('lf-arw')){
                i = curSlide == 0 ? 5 : curSlide-1;
            }else{
                i = curSlide == 5 ? 0 : curSlide+1;
            }
            changeSlide(i);
        });


        function changeSlide(i){
            var lf = i > curSlide;

            $capSlides.eq(curSlide).addClass(lf ? 'lf' : 'rg');
            $capSlides.eq(i).removeClass('lf rg');
            $capSlides.slice(i+1).addClass('na').removeClass('lf').addClass('rg').removeClass('na');
            $capSlides.slice(0,i).addClass('na').removeClass('rg').addClass('lf').removeClass('na');

            if(i==5){
                $capSlides.eq(0).addClass('na').removeClass('lf').addClass('rg').removeClass('na');
            }else if(i==0){
                $capSlides.eq(5).addClass('na').removeClass('rg').addClass('lf').removeClass('na');
            }

            Game.Player.caps = $capSlides.eq(i).attr('id');
            console.log(Game.Player.caps);
            refreshNav(i);
            curSlide = i;
        }

        function refreshNav(i){
            $navBtm.removeClass();
            $navBtm.eq(i).addClass('act');
            $bgSlides.removeClass('act');
            $bgSlides.eq(i).addClass('act');
        }

        if(CAPS.solo)
            $sendCaps.on('click', function(){Interface.navigate(6)});
        else
            $sendCaps.on('click', Game[Game.role].sendPlayerInfo);

    },
    textoBox : {
        $sdBox : null,
        $rdBox :null,
        tm : null,
        init : function(){
            this.$sdBox = $('#sd-messages-box');
            this.$rcBox = $('#rc-messages-box');

            var $rcb = this.$rcBox;

            var sendDelay = 1000;

            this.$sdBox.on('click', 'li', function(){
                var i = $(this).index();
                Game.Player.playerMessage(i);
                Interface.textoBox.$sdBox.addClass('disabled');

                setTimeout(function(){
                    Interface.textoBox.$sdBox.removeClass('disabled');
                }, sendDelay);
            });

            this.tm = new TimelineMax({paused:true});

            this.tm.to($rcb, 0, {width:0, height:0, opacity:0})
                .to($rcb, 0.5, {width:200, height:3, opacity:1, ease: Elastic.easeOut.config(1, 0.4)}, 0.1)
                .to($rcb, 0.5, {height:60, ease: Elastic.easeOut.config(1, 0.4)});

            TweenLite.set($rcb,{width:0, height:0, opacity:0})


        },
        showTexto : function(i){
            var shownTime = 5500;
            var $rcb = this.$rcBox;
            var texto = this.$sdBox.find('li').eq(i).html();
            $rcb.empty().append(texto);
            $rcb.find('p').lettering();
            $rcb.find('span').css({opacity:0});

            if(phone) phone.receiveMessage();

            setTimeout(function(){
                Interface.textoBox.tm.play();

                setTimeout(function(){
                    var n = 0;
                    var spanInt = setInterval(function(){
                        $rcb.find('span').eq(n).css({opacity:1});
                        n++;
                        if(n == $rcb.find('span').length){
                            clearInterval(spanInt);
                        }
                    }, 0.4);
                }, 1000);


                setTimeout(function(){
                    var nbSpan = $rcb.find('span').length-1;
                    var n = nbSpan;

                    var spanInt = setInterval(function(){
                        $rcb.find('span').eq(n).css({opacity:0});
                        n--;
                        if(n == -1){
                            clearInterval(spanInt);
                        }
                    }, 0.2);
                    setTimeout(function(){
                        Interface.textoBox.tm.reverse();
                        setTimeout(function(){
                            phone.closeMessage();
                        }, 800);
                    }, (nbSpan-1)*20);

                }, shownTime);
            }, 1000);
        }
    },
    initResetParty : function(){
        var $resetC = $('#reset-party-c'),
            $h3 = $resetC.find('h3'),
            $h4 = $resetC.find('h4');

        TweenMax.set($h4,{scale:0.5, opacity:0, height:0});


        $resetC.find('#bt-reset-party').click(function(){

            if(CAPS.solo){
                Party.resetParty();
            }else{
                Game.Player.playerReset();
                $resetC.addClass('loading');
                TweenMax.to($h3, 0.4, {scale:0.5, opacity:0, onComplete: function(){
                    $h3.text('En attente de ton adversaire...');
                    TweenMax.to($h3, 0.4, {scale:1, opacity:1, delay:0.5,  ease:Elastic.easeOut.config(1, 0.4)});
                }});
            }
        });
    },
    initMenu : function(){
        var $btMenu = $('#bt-menu'),
            $btClose = $('#bt-close-menu'),
            $btCloseTuto = $('#bt-close-tuto'),
            $menu = $('#pause-menu'),
            $volets = $menu.find('.volet');


        $btMenu.click(function(){
            TweenMax.to($menu, 0.7, {opacity:1, display:"block"});
        });


        $menu.find('#lk-about').click(function(){
            $volets.addClass('hidden');
            $volets.filter('#about-pause').removeClass('hidden');
        });

        $menu.find('#lk-tuto').click(function(){
            $volets.addClass('hidden');
            $volets.filter('#tuto-pause').removeClass('hidden');
            TweenMax.to($btClose, 0.5, {opacity:0});
            TweenMax.to($menu.find('.pause-logo'), 0.5, {scale:0, opacity:0, ease:Elastic.easeOut.config(1, 0.4)});
            if(Player.totalLaunched == 0)
                TweenMax.to($plpart.find('.cap-tuto'), 0.5, {scale:0, opacity:0, ease:Elastic.easeOut.config(1, 0.4)});

        });

        $menu.find('.back').click(function(){
            $volets.addClass('hidden');
            TweenMax.to($menu.find('.pause-logo'), 0.5, {scale:1, opacity:1});
            $volets.filter('#home-pause').removeClass('hidden');
        });


        $($btClose).click(closeMenu);
        $($btCloseTuto).click(closeMenu);

        function closeMenu(){
            TweenMax.to($menu, 0.7, {opacity:0, onComplete: function(){
                TweenMax.set($menu, {display:"none"});

                $volets.addClass('hidden');

                TweenMax.set($btClose, {scale:1, opacity:1});

                TweenMax.set($menu.find('.pause-logo'), {scale:1, opacity:1});
                $volets.filter('#home-pause').removeClass('hidden');
            }});
        }

    }

};